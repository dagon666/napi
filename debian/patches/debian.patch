Description: Removed .sh suffixes and set NAPI_COMMON_PATH variable
Author: Mikhail Morfikov <mmorfikov@gmail.com>

--- napi-1.3.4.orig/napi.sh
+++ napi-1.3.4/napi.sh
@@ -32,12 +32,12 @@
 ########################################################################
 
 # verify presence of the napi_common library
-declare -r NAPI_COMMON_PATH=
+declare -r NAPI_COMMON_PATH=/usr/share/napi
 if [ -z "$NAPI_COMMON_PATH" ] || [ ! -e "${NAPI_COMMON_PATH}/napi_common.sh" ]; then
     echo
-	echo "napi.sh i subotage.sh nie zostaly poprawnie zainstalowane"
+	echo "napi i subotage nie zostaly poprawnie zainstalowane"
 	echo "uzyj skryptu install.sh (install.sh --help - pomoc)"
-	echo "aby zainstalowac napi.sh w wybranym katalogu"
+	echo "aby zainstalowac napi w wybranym katalogu"
     echo
 	exit -1
 fi
@@ -191,7 +191,7 @@ declare -a g_tools=( 'tr=1' 'printf=1' '
     'wc=1' 'dd=1' 'grep=1' 'seq=1' 'sed=1' \
     'cut=1' 'base64=0' 'unlink=0' 'stat=1' \
     'basename=1' 'dirname=1' 'cat=1' 'cp=1' \
-    'mv=1' 'awk=0' 'file=0' 'subotage.sh=0' \
+    'mv=1' 'awk=0' 'file=0' 'subotage=0' \
     '7z=0' '7za=0' '7zr=0' 'iconv=0' 'mediainfo=0' \
     'mplayer=0' 'mplayer2=0' 'ffmpeg=0' 'ffprobe=0' )
 
@@ -743,18 +743,18 @@ verify_format() {
 
         # this function can cope with that kind of input
         # shellcheck disable=SC2068
-        local sp=$(lookup_value 'subotage.sh' ${g_tools[@]})
+        local sp=$(lookup_value 'subotage' ${g_tools[@]})
 
         # make sure it's a number
         sp=$(( sp + 0 ))
 
         if [ "$sp" -eq 0 ]; then
-            _error "subotage.sh nie jest dostepny. konwersja nie jest mozliwa"
+            _error "subotage nie jest dostepny. konwersja nie jest mozliwa"
             return $RET_PARAM
         fi
 
         declare -a formats=()
-        formats=( $(subotage.sh -gf) )
+        formats=( $(subotage -gf) )
 
         # this function can cope with that kind of input
         # shellcheck disable=SC2068
@@ -2097,7 +2097,7 @@ convert_format() {
         _msg "fps nieznany, okr. na podstawie napisow albo wart. domyslna"
     fi
 
-    _msg "wolam subotage.sh"
+    _msg "wolam subotage"
 
     # create ipc file to update the message counter
     local ipc_file="$(mktemp ipc.XXXXXXXX)"
@@ -2105,7 +2105,7 @@ convert_format() {
 
     # fps_opt must be expanded for the subotage call
     # shellcheck disable=SC2086
-    subotage.sh -v "${g_output[$___VERBOSITY]}" \
+    subotage -v "${g_output[$___VERBOSITY]}" \
         -i "$path/$input" \
         -of $g_sub_format \
         -t "${g_output[$___FORK]}" \
@@ -2129,7 +2129,7 @@ convert_format() {
             $g_cmd_unlink "$path/$input"
 
     elif [ $status -eq $RET_NOACT ]; then
-        _msg "subotage.sh - konwersja nie jest konieczna"
+        _msg "subotage - konwersja nie jest konieczna"
         
         #copy the backup to converted
         cp "$tmp" "$path/$conv"
@@ -2562,7 +2562,7 @@ usage() {
 
     # this function can cope with that kind of input
     # shellcheck disable=SC2068
-    local subotage_presence=$(lookup_value 'subotage.sh' ${g_tools[@]})
+    local subotage_presence=$(lookup_value 'subotage' ${g_tools[@]})
 
     # this function can cope with that kind of input
     # shellcheck disable=SC2068
@@ -2573,8 +2573,8 @@ usage() {
     iconv_presence=$(( iconv_presence + 0 ))
 
     echo "=============================================================="
-    echo "napi.sh version $g_revision (identifies as ${g_system[2]})"
-    echo "napi.sh [OPCJE] <plik|katalog|*>"
+    echo "napi version $g_revision (identifies as ${g_system[2]})"
+    echo "napi [OPCJE] <plik|katalog|*>"
     echo
 
     echo "   -a  | --abbrev <string> - dodaj dowolny string przed rozszerzeniem (np. nazwa.<string>.txt)"
@@ -2586,14 +2586,14 @@ usage() {
 
     echo "   -e  | --ext - rozszerzenie dla pobranych napisow (domyslnie *.txt)"
     echo "   -F  | --forks - okresl recznie ile rownoleglych procesow utworzyc (dom. ${g_system[1]})"
-    echo "   -I  | --id <pynapi|other|NapiProjektPython|NapiProjekt> - okresla jak napi.sh ma sie przedstawiac serwerom napiprojekt.pl (dom. ${g_system[2]})"
+    echo "   -I  | --id <pynapi|other|NapiProjektPython|NapiProjekt> - okresla jak napi ma sie przedstawiac serwerom napiprojekt.pl (dom. ${g_system[2]})"
     echo "   -l  | --log <logfile> - drukuj output to pliku zamiast na konsole"
     echo "   -lo | --log-overwrite - jezeli plik loga juz istnieje - nadpisz go"
     echo "   -L  | --language <LANGUAGE_CODE> - pobierz napisy w wybranym jezyku"
     echo "   -M  | --move - w przypadku opcji (-s) przenos pliki, nie kopiuj"
     echo "   -n  | --nfo - utworz plik z informacjami o napisach (wspierane tylko z id NapiProjektPython/NapiProjekt)"
     echo "   -p  | --pass <passwd> - haslo dla uzytkownika <login>"
-    echo "   -S  | --script <script_path> - wywolaj skrypt po pobraniu napisow (sciezka do pliku z napisami, relatywna do argumentu napi.sh, bedzie przekazana jako argument)"
+    echo "   -S  | --script <script_path> - wywolaj skrypt po pobraniu napisow (sciezka do pliku z napisami, relatywna do argumentu napi, bedzie przekazana jako argument)"
     echo "   -s  | --skip - nie sciagaj, jezeli napisy juz sciagniete"
     echo "   -u  | --user <login> - uwierzytelnianie jako uzytkownik"
     echo "   -v  | --verbosity <0..3> - zmien poziom gadatliwosci 0 - cichy, 3 - debug"
@@ -2601,38 +2601,38 @@ usage() {
     
     if [ "$subotage_presence" -eq 1 ]; then    
         echo "   -d  | --delete-orig - Delete the original file"   
-        echo "   -f  | --format - konwertuj napisy do formatu (wym. subotage.sh)"
+        echo "   -f  | --format - konwertuj napisy do formatu (wym. subotage)"
         echo "   -P  | --pref-fps <fps_tool> - preferowany detektor fps (jezeli wykryto jakikolwiek)"
         echo "   -o  | --orig-prefix - prefix dla oryginalnego pliku przed konwersja (domyslnie: $g_orig_prefix)"   
         echo "       | --conv-abbrev <string> - dodaj dowolny string przed rozszerzeniem podczas konwersji formatow"
         echo
         echo "Obslugiwane formaty konwersji napisow"
-        subotage.sh -gl
+        subotage -gl
     fi
 
     echo
     echo "Przyklady:"
-    echo " napi.sh film.avi          - sciaga napisy dla film.avi."
-    echo " napi.sh -c film.avi       - sciaga napisy i okladke dla film.avi."
-    echo " napi.sh -u foo -p bar -c film.avi - sciaga napisy i okladke do"
+    echo " napi film.avi          - sciaga napisy dla film.avi."
+    echo " napi -c film.avi       - sciaga napisy i okladke dla film.avi."
+    echo " napi -u foo -p bar -c film.avi - sciaga napisy i okladke do"
     echo "                             film.avi jako uzytkownik foo"
-    echo " napi.sh *                 - szuka plikow wideo w obecnym katalogu"
+    echo " napi *                 - szuka plikow wideo w obecnym katalogu"
     echo "                             i podkatalogach, po czym stara sie dla"
     echo "                             nich znalezc i pobrac napisy."
-    echo " napi.sh *.avi             - wyszukiwanie tylko plikow avi."
-    echo " napi.sh katalog_z_filmami - wyszukiwanie we wskazanym katalogu"
+    echo " napi *.avi             - wyszukiwanie tylko plikow avi."
+    echo " napi katalog_z_filmami - wyszukiwanie we wskazanym katalogu"
     echo "                             i podkatalogach."
     
     if [ "$subotage_presence" -ne 1 ]; then
         echo " "
         echo "UWAGA !!!"
-        echo "napi.sh moze automatycznie dokonywac konwersji napisow"
+        echo "napi moze automatycznie dokonywac konwersji napisow"
         echo "do wybranego przez Ciebie formatu. Zainstaluj uniwersalny"
-        echo "konwerter formatow dla basha: subotage.sh"
+        echo "konwerter formatow dla basha: subotage"
         echo "http://sourceforge.net/projects/bashnapi/"
         echo
     else
-        echo " napi.sh -f subrip *       - sciaga napisy dla kazdego znalezionego pliku"
+        echo " napi -f subrip *       - sciaga napisy dla kazdego znalezionego pliku"
         echo "                           po czym konwertuje je do formatu subrip"
 
         local c_fps=$(count_fps_detectors)
@@ -2669,7 +2669,7 @@ usage() {
 #
 print_new_api_info() {
     _msg "================================================="
-    _msg "napi.sh od wersji 1.3.1 domyslnie uzywa nowego"
+    _msg "napi od wersji 1.3.1 domyslnie uzywa nowego"
     _msg "API (napiprojekt-3)"
     _msg "Jezeli zauwazysz jakies problemy z nowym API"
     _msg "albo skrypt dziala zbyt wolno, mozesz wrocic do"
--- napi-1.3.4.orig/napi_common.sh
+++ napi-1.3.4/napi_common.sh
@@ -4,7 +4,7 @@
 # vim: ts=4 shiftwidth=4 expandtab
 
 #
-# version for the whole bundle (napi.sh & subotage.sh)
+# version for the whole bundle (napi & subotage)
 #
 declare -r g_revision="v1.3.4"
 
--- napi-1.3.4.orig/subotage.sh
+++ napi-1.3.4/subotage.sh
@@ -24,12 +24,12 @@
 ################################################################################
 
 # verify presence of the napi_common library
-declare -r NAPI_COMMON_PATH=
+declare -r NAPI_COMMON_PATH=/usr/share/napi
 if [ -z "$NAPI_COMMON_PATH" ] || [ ! -e "${NAPI_COMMON_PATH}/napi_common.sh" ]; then
     echo
-	echo "napi.sh i subotage.sh nie zostaly poprawnie zainstalowane"
+	echo "napi i subotage.sh nie zostaly poprawnie zainstalowane"
 	echo "uzyj skryptu install.sh (install.sh --help - pomoc)"
-	echo "aby zainstalowac napi.sh w wybranym katalogu"
+	echo "aby zainstalowac napi w wybranym katalogu"
     echo
 	exit -1
 fi
@@ -1236,7 +1236,7 @@ list_formats() {
 # @brief prints the help & options overview
 #
 usage() {
-    echo    "subotage.sh -i <input_file> -o <output_file> [opcje]"
+    echo    "subotage -i <input_file> -o <output_file> [opcje]"
     echo    "napi bundle version [$g_revision]" 
     echo    "   "
     echo    "Opcje:"
